{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","onShowTodo","className","map","todo","id","completed","title","username","type","onClick","TodoFilter","onFilterChange","useState","query","setQuery","onChange","event","selectedFilter","target","value","placeholder","newQuery","style","pointerEvents","Loader","TodoModal","onCloseModal","userLoading","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","setTodos","loading","setLoading","selectedTodo","setSelectedTodo","user","setUser","setUserLoading","filter","setFilter","useEffect","fetchTodos","a","todosData","Error","filteredTodos","handleShowTodo","userId","userData","name","email","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6bb3a66.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC<{\n  todos: Todo[];\n  onShowTodo: (todo: Todo) => void;\n}> = ({ todos, onShowTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success' : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"is-vcentered\">\n            {todo.username}\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onShowTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { ChangeEvent, useState } from 'react';\n\ntype TodoFilterProps = {\n  onFilterChange: (filter: string, query: string) => void;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({ onFilterChange }) => {\n  const [query, setQuery] = useState<string>('');\n\n  const handleFilterChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const selectedFilter = event.target.value;\n\n    onFilterChange(selectedFilter, query);\n  };\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n\n    setQuery(newQuery);\n    onFilterChange('all', newQuery);\n  };\n\n  const handleClearQuery = () => {\n    setQuery('');\n    onFilterChange('all', '');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={handleFilterChange}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype TodoModalProps = {\n  todo: Todo;\n  onCloseModal: () => void;\n  userLoading: boolean;\n};\n\nexport const TodoModal: React.FC<\nTodoModalProps> = ({ todo, onCloseModal, userLoading }) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {userLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n            <p>\n              <strong className=\"has-text-danger\">Planned</strong>\n              {' by '}\n              {todo.username}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport { getTodos, getUser } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [userLoading, setUserLoading] = useState<boolean>(true);\n  const [filter, setFilter] = useState<string>('all');\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const todosData = await getTodos();\n\n        setTodos(todosData);\n        setLoading(false);\n      } catch (error) {\n        throw new Error('Error fetching todos');\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const handleShowTodo = async (todo: Todo): Promise<void> => {\n    setSelectedTodo(todo);\n\n    try {\n      const userData = await getUser(todo.userId);\n\n      setUser(userData);\n      setUserLoading(false);\n    } catch (error) {\n      throw new Error('Error fetching user details:');\n    }\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n    setUser(null);\n    setUserLoading(true);\n  };\n\n  const handleFilterChange = (selectedFilter: string) => {\n    setFilter(selectedFilter);\n  };\n\n  let filteredTodos;\n\n  if (filter === 'completed') {\n    filteredTodos = todos.filter(todo => todo.completed);\n  } else if (filter === 'active') {\n    filteredTodos = todos.filter(todo => !todo.completed);\n  } else {\n    filteredTodos = todos;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilterChange={handleFilterChange} />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader /> // Show the loader while fetching todos\n              ) : (\n                <TodoList todos={filteredTodos} onShowTodo={handleShowTodo} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseModal={handleCloseModal}\n          userLoading={userLoading}\n        />\n      )}\n\n      {userLoading && <Loader />}\n      {!userLoading && user && (\n        <div>\n          <h2>User Details:</h2>\n          <p>\n            Name:\n            {user.name}\n          </p>\n          <p>\n            Email:\n            {user.email}\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}